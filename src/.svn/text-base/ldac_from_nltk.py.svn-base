
import sys

from nltk.corpus import brown
from nltk.probability import FreqDist
from nltk.corpus import stopwords
from nltk.corpus import wordnet as wn

def morphy_stem(s):
  first_try = wn.morphy(s)
  if first_try:
    return first_try
  else:
    return s


# Generates an input file that can be used by DF-LDA
if __name__ == "__main__":
  if len(sys.argv) < 2:
    print("Usage: python ldac_from_nltk.py output_file [vocab_size]")
    exit(0)
  output_file = sys.argv[1]

  try:
    vocab_size = int(sys.argv[2])
  except IndexError:
    vocab_size = 2500

  stop_words = stopwords.words('english')

  f = FreqDist()
  for ii in brown.words():
    word = morphy_stem(ii.lower())
    if word not in stop_words and len(word) > 2:
      f.inc(word)

  vocab = f.keys()[:vocab_size]

  o = open("%s.voc" % output_file, 'w')
  for jj in vocab:
    o.write("%s\n" % jj)
  o.close()

  vocab = dict((vocab[x], x) for x in xrange(len(vocab)))
  o = open("%s.dat" % output_file, 'w')
  for ii in brown.fileids():
    f = FreqDist()
    for jj in brown.words(ii):
      if jj in vocab:
        f.inc(vocab[jj])
    for jj in f:
      o.write("%i:%i " % (jj, f[jj]))
    o.write("\n")
  o.close()


